#!/bin/bash

function show_help() {
  echo "Sends an HTTP request using the GET method to the specified port number in localhost."
  echo "Usage:"
  printf '  %s [port][/path]\n' "$(basename "$0")"
  printf '  %s help\n' "$(basename "$0")"
  cat <<EOF
Where:
  port  Specifies the port to issue the GET request.
        If no number is specified, the port defaults to 8080.
  path  Optionally, a path can be specified.
  help  Shows this help message.
EOF
  echo "Examples:"
  for i in {1..3}; do
    random_port="$((RANDOM % (8080 - 1024 + 1) + 1024))"
    if [[ $((RANDOM % 2 + 1)) -eq 2 ]]; then
      random_path="$(find / -maxdepth 1 -not -name '.*' | tr "[:upper:]" "[:lower:]" | uniq | sort -R | head -1)"
      if [[ $((RANDOM % 3 + 1)) -gt 2 ]]; then
        random_subpath="$(find / -maxdepth 1 -not -name '.*' | tr "[:upper:]" "[:lower:]" | uniq | sort -R | head -1)"
      else
        random_subpath=""
      fi
    else
      random_path=""
    fi
    printf '  %s %s%s%s = curl -ksS -XGET http://localhost:' "$(basename "$0")" "$random_port" "$random_path" "$random_subpath"
    printf '%s%s%s\n' "$random_port" "$random_path" "$random_subpath"
  done
  echo "$i" >/dev/null
}

function http_request() {
  curl -ksS -XGET "http://localhost:$1"
}

case $1 in
-h | --help | help)
  show_help
  ;;
"")
  http_request 8080
  ;;
*)
  http_request "$1"
  ;;
esac

exit $?
